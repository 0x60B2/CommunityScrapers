name: AdultEmpire

movieByURL:
  - action: scrapeXPath
    url:
      - adultdvdempire.com
      - adultempire.com
    scraper: movieScraper
sceneByURL:
  - action: scrapeXPath
    url:
      - adultdvdempire.com
      - adultempire.com
    scraper: sceneScraper
sceneByName:
  action: scrapeXPath
  # if needed replace `dvd` with `vod`
  queryURL: https://www.adultdvdempire.com/dvd/search?q={}
  scraper: sceneSearch
sceneByQueryFragment:
  action: scrapeXPath
  queryURL: "{url}"
  scraper: sceneScraper

xPathScrapers:
  sceneSearch:
    scene:
      Title:
        selector: //div[@class="item-title"]/a/@*[local-name()="href" or local-name()="title"]
        concat: "|"
        postProcess:
          - replace:
            - regex: '/(\d+)/[^|]+\|([^|]+)'
              with: "$2 ($1)"
        split: "|"
      URL:
        selector: //div[@id="content"]//div[@class="item-title"]/a/@href
        postProcess:
          - replace:
              - regex: ^
                with: "https://www.adultdvdempire.com"
      Image:
        selector: //a[@class="boxcover"]/img/@data-src
  movieScraper:
    movie:
      Name:
        selector: //h1/text()
        postProcess:
          - replace:
            - regex: ^\s+(.+)\s+$
              with: $1
      Director:
        selector: //a[@label="Director"]/text()
        postProcess:
          - replace:
            - regex: ^\s+(.+)\s+$
              with: $1
      Duration:
        selector: //small[contains(text(), "Length")]/following-sibling::text()
        postProcess:
          - replace:
            - regex: " hrs. "
              with: ":"
            - regex: " mins."
              with: ":00"
      Date:
        selector: //small[contains(text(), "Released")]/following-sibling::text()
        postProcess:
          - parseDate: Jan 02 2006
      Synopsis:
        selector: //h4[contains(@class,"synopsis")]//text()
        concat: " "
      Studio:
        Name: //a[@label="Studio"]/text()
      FrontImage: //a[@id="front-cover"]/@data-href
      BackImage: //a[@id="back-cover"]/@href
      # Rating is not yet implemented in the UX
      # Rating:
      #   selector: //span[@class='rating-stars-avg']/text()
      #   postProcess:
      #     - replace:
      #       - regex: (\d).+
      #         with: $1
      URL: //meta[@name='og:url']/@content
  sceneScraper:
    scene:
      Title: //div[@class="clip-page__detail__title__primary"]/text()
      Date:
        selector: //strong[starts-with(text(), "Released:")]//ancestor::li/text()
        postProcess:
          - parseDate: Jan 02 2006
      Studio:
        Name: //a[@label="Studio" and contains(@href, "studio")]
      Movies:
        Name: //div[contains(text(), "from")]//following-sibling::a/text()
        URL:
          selector: //div[contains(text(), "from")]//following-sibling::a//@href
          postProcess:
            - replace:
              - regex: ^
                with: "https://www.adultdvdempire.com"
      Tags:
        Name: //strong[starts-with(text(), "Attributes:")]//following-sibling::a/text()
      Performers:
        Name: //strong[starts-with(text(), "Starring:")]//following-sibling::a/text()
        URL:
          selector: //strong[starts-with(text(), "Starring:")]//following-sibling::a/@href
          postProcess:
            - replace:
              - regex: ^
                with: "https://www.adultdvdempire.com"
# Last Updated July 17, 2023
